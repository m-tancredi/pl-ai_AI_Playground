# Docker Compose Override per Ambiente Produzione
# Uso: docker-compose -f docker-compose.yml -f docker-compose.prod.yml --env-file .env.prod up

services:
  # =============================================================================
  # DATABASE SERVICES - PRODUCTION CONFIG
  # =============================================================================
  
  auth_db:
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuovo port exposure per sicurezza
    ports: []

  user_db:
    environment:
      - POSTGRES_DB=${USER_DB_NAME}
      - POSTGRES_USER=${USER_DB_USER}
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  chatbot_db:
    environment:
      - POSTGRES_DB=${CHATBOT_DB_NAME}
      - POSTGRES_USER=${CHATBOT_DB_USER}
      - POSTGRES_PASSWORD=${CHATBOT_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  image_generator_db:
    environment:
      - POSTGRES_DB=${IMAGE_GEN_DB_NAME}
      - POSTGRES_USER=${IMAGE_GEN_DB_USER}
      - POSTGRES_PASSWORD=${IMAGE_GEN_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  resource_db:
    environment:
      - POSTGRES_DB=${RESOURCE_DB_NAME}
      - POSTGRES_USER=${RESOURCE_DB_USER}
      - POSTGRES_PASSWORD=${RESOURCE_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  classifier_db:
    environment:
      - POSTGRES_DB=${CLASSIFIER_DB_NAME}
      - POSTGRES_USER=${CLASSIFIER_DB_USER}
      - POSTGRES_PASSWORD=${CLASSIFIER_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  analysis_db:
    environment:
      - POSTGRES_DB=${ANALYSIS_DB_NAME}
      - POSTGRES_USER=${ANALYSIS_DB_USER}
      - POSTGRES_PASSWORD=${ANALYSIS_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  rag_db:
    environment:
      - POSTGRES_DB=${RAG_DB_NAME}
      - POSTGRES_USER=${RAG_DB_USER}
      - POSTGRES_PASSWORD=${RAG_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  learning_db:
    environment:
      - POSTGRES_DB=${LEARNING_DB_NAME}
      - POSTGRES_USER=${LEARNING_DB_USER}
      - POSTGRES_PASSWORD=${LEARNING_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  # =============================================================================
  # MESSAGE BROKER - PRODUCTION CONFIG
  # =============================================================================
  
  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.6
      - RABBITMQ_DISK_FREE_LIMIT=1GB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuvo management UI per sicurezza
    ports: []

  # =============================================================================
  # BACKEND SERVICES - PRODUCTION CONFIG
  # =============================================================================
  
  auth_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${AUTH_DB_USER}:${AUTH_DB_PASSWORD}@auth_db:5432/${AUTH_DB_NAME}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE}
      - SECURE_BROWSER_XSS_FILTER=${SECURE_BROWSER_XSS_FILTER}
      - SECURE_CONTENT_TYPE_NOSNIFF=${SECURE_CONTENT_TYPE_NOSNIFF}
      - X_FRAME_OPTIONS=${X_FRAME_OPTIONS}
      - SECURE_HSTS_SECONDS=${SECURE_HSTS_SECONDS}
      - SECURE_HSTS_INCLUDE_SUBDOMAINS=${SECURE_HSTS_INCLUDE_SUBDOMAINS}
      - SECURE_HSTS_PRELOAD=${SECURE_HSTS_PRELOAD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_LIFETIME_MINUTES=${JWT_ACCESS_TOKEN_LIFETIME_MINUTES}
      - JWT_REFRESH_TOKEN_LIFETIME_DAYS=${JWT_REFRESH_TOKEN_LIFETIME_DAYS}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SOCIAL_AUTH_GOOGLE_CLIENT_ID=${SOCIAL_AUTH_GOOGLE_CLIENT_ID}
      - SOCIAL_AUTH_GOOGLE_CLIENT_SECRET=${SOCIAL_AUTH_GOOGLE_CLIENT_SECRET}
      - EMAIL_BACKEND=${EMAIL_BACKEND}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuovo volume mounts per sicurezza
    volumes: []
    env_file: []

  user_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${USER_DB_USER}:${USER_DB_PASSWORD}@user_db:5432/${USER_DB_NAME}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - FILE_UPLOAD_MAX_MEMORY_SIZE=${FILE_UPLOAD_MAX_MEMORY_SIZE}
      - MAX_PROFILE_PICTURE_SIZE=${MAX_PROFILE_PICTURE_SIZE}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes: []
    env_file: []

  chatbot_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DB_NAME=${CHATBOT_DB_NAME}
      - DB_USER=${CHATBOT_DB_USER}
      - DB_PASSWORD=${CHATBOT_DB_PASSWORD}
      - DB_HOST=chatbot_db
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - COST_MONITORING_SERVICE_URL=${COST_MONITORING_SERVICE_URL}
      - MAX_WORKERS=${CHATBOT_MAX_WORKERS}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    volumes: []
    env_file: []

  image_generator_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - IMAGE_GEN_DB_NAME=${IMAGE_GEN_DB_NAME}
      - IMAGE_GEN_DB_USER=${IMAGE_GEN_DB_USER}
      - IMAGE_GEN_DB_PASSWORD=${IMAGE_GEN_DB_PASSWORD}
      - IMAGE_GEN_DB_HOST=image_generator_db
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - MAX_CONCURRENT_GENERATIONS=${MAX_CONCURRENT_GENERATIONS}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    volumes: []
    env_file: []

  resource_manager_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - RESOURCE_DB_NAME=${RESOURCE_DB_NAME}
      - RESOURCE_DB_USER=${RESOURCE_DB_USER}
      - RESOURCE_DB_PASSWORD=${RESOURCE_DB_PASSWORD}
      - RESOURCE_DB_HOST=resource_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - RAG_SERVICE_URL=${RAG_SERVICE_URL}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes: []
    env_file: []

  image_classifier_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CLASSIFIER_DB_NAME=${CLASSIFIER_DB_NAME}
      - CLASSIFIER_DB_USER=${CLASSIFIER_DB_USER}
      - CLASSIFIER_DB_PASSWORD=${CLASSIFIER_DB_PASSWORD}
      - CLASSIFIER_DB_HOST=classifier_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - TF_CPP_MIN_LOG_LEVEL=${TF_CPP_MIN_LOG_LEVEL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
    volumes: []
    env_file: []

  data_analysis_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - ANALYSIS_DB_NAME=${ANALYSIS_DB_NAME}
      - ANALYSIS_DB_USER=${ANALYSIS_DB_USER}
      - ANALYSIS_DB_PASSWORD=${ANALYSIS_DB_PASSWORD}
      - ANALYSIS_DB_HOST=analysis_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - RESOURCE_MANAGER_INTERNAL_URL=${RESOURCE_MANAGER_INTERNAL_URL}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - TF_CPP_MIN_LOG_LEVEL=${TF_CPP_MIN_LOG_LEVEL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1.5G
          cpus: '1.0'
    volumes: []
    env_file: []

  rag_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - RAG_DB_NAME=${RAG_DB_NAME}
      - RAG_DB_USER=${RAG_DB_USER}
      - RAG_DB_PASSWORD=${RAG_DB_PASSWORD}
      - RAG_DB_HOST=rag_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - RAG_UPLOADS_ROOT=${RAG_UPLOADS_ROOT}
      - RAG_EMBEDDINGS_ROOT=${RAG_EMBEDDINGS_ROOT}
      - RAG_MAX_CHUNK_SIZE=${RAG_MAX_CHUNK_SIZE}
      - RAG_CHUNK_OVERLAP=${RAG_CHUNK_OVERLAP}
      - RAG_TOP_K_RESULTS=${RAG_TOP_K_RESULTS}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION}
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE}
      - RESOURCE_MANAGER_INTERNAL_URL=${RESOURCE_MANAGER_INTERNAL_URL}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - FILE_UPLOAD_MAX_MEMORY_SIZE=${FILE_UPLOAD_MAX_MEMORY_SIZE}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
    volumes: []
    env_file: []

  learning_service:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SERVICE_DB_NAME=${LEARNING_DB_NAME}
      - SERVICE_DB_USER=${LEARNING_DB_USER}
      - SERVICE_DB_PASSWORD=${LEARNING_DB_PASSWORD}
      - SERVICE_DB_HOST=learning_db
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - DEFAULT_LESSON_LENGTH=${DEFAULT_LESSON_LENGTH}
      - DEFAULT_QUIZ_QUESTIONS=${DEFAULT_QUIZ_QUESTIONS}
      - MAX_LESSON_APPROFONDIMENTI=${MAX_LESSON_APPROFONDIMENTI}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - RATE_LIMIT_ANON=${RATE_LIMIT_ANON}
      - RATE_LIMIT_USER=${RATE_LIMIT_USER}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes: []
    env_file: []

  # =============================================================================
  # WORKER SERVICES - PRODUCTION CONFIG
  # =============================================================================
  
  rag_worker:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - RAG_DB_NAME=${RAG_DB_NAME}
      - RAG_DB_USER=${RAG_DB_USER}
      - RAG_DB_PASSWORD=${RAG_DB_PASSWORD}
      - RAG_DB_HOST=rag_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - RAG_UPLOADS_ROOT=${RAG_UPLOADS_ROOT}
      - RAG_EMBEDDINGS_ROOT=${RAG_EMBEDDINGS_ROOT}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2
    env_file: []

  data_analysis_worker:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - ANALYSIS_DB_NAME=${ANALYSIS_DB_NAME}
      - ANALYSIS_DB_USER=${ANALYSIS_DB_USER}
      - ANALYSIS_DB_PASSWORD=${ANALYSIS_DB_PASSWORD}
      - ANALYSIS_DB_HOST=analysis_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - RESOURCE_MANAGER_INTERNAL_URL=${RESOURCE_MANAGER_INTERNAL_URL}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
      - TF_CPP_MIN_LOG_LEVEL=${TF_CPP_MIN_LOG_LEVEL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2
    env_file: []

  image_classifier_worker:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - CLASSIFIER_DB_NAME=${CLASSIFIER_DB_NAME}
      - CLASSIFIER_DB_USER=${CLASSIFIER_DB_USER}
      - CLASSIFIER_DB_PASSWORD=${CLASSIFIER_DB_PASSWORD}
      - CLASSIFIER_DB_HOST=classifier_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - TF_CPP_MIN_LOG_LEVEL=${TF_CPP_MIN_LOG_LEVEL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY}
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2
    env_file: []

  resource_manager_worker:
    environment:
      - DEBUG=${DJANGO_DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - RESOURCE_DB_NAME=${RESOURCE_DB_NAME}
      - RESOURCE_DB_USER=${RESOURCE_DB_USER}
      - RESOURCE_DB_PASSWORD=${RESOURCE_DB_PASSWORD}
      - RESOURCE_DB_HOST=resource_db
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - INTERNAL_API_SECRET=${INTERNAL_API_SECRET}
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    env_file: []

  # =============================================================================
  # FRONTEND - PRODUCTION CONFIG
  # =============================================================================
  
  frontend:
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT}
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # =============================================================================
  # NGINX - PRODUCTION CONFIG
  # =============================================================================
  
  nginx:
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

# =============================================================================
# CONFIGURAZIONI DI RETE PRODUZIONE
# =============================================================================
networks:
  pl-ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 