# Docker Compose Override per Ambiente Produzione
# Uso: docker-compose -f docker-compose.yml -f docker-compose.prod.yml --env-file .env.prod up

version: '3.8'

services:
  # --- Frontend ottimizzato per produzione ---
  frontend:
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${FRONTEND_API_URL}
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # --- Auth Service produzione ---
  auth_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - DJANGO_SETTINGS_MODULE=service_auth.settings_prod
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECURE_SSL_REDIRECT=True
      - SESSION_COOKIE_SECURE=True
      - CSRF_COOKIE_SECURE=True
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuovo volume mounts per sicurezza
    volumes: []

  # --- Chatbot Service produzione ---
  chatbot_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    volumes: []

  # --- User Service produzione ---
  user_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes: []

  # --- Image Generator Service produzione ---
  pl_ai_image_generator_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_GENERATIONS=2
    restart: always
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    volumes: []

  # --- Data Analysis Service produzione ---
  data_analysis_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - CELERY_WORKER_CONCURRENCY=2
    restart: always
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1.5G
          cpus: '1.0'
    volumes: []

  # --- RAG Service produzione ---
  rag_service:
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - EMBEDDING_BATCH_SIZE=100
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
    volumes: []

  # --- Database con configurazioni produzione ---
  auth_db:
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuovo port exposure per sicurezza
    ports: []

  chatbot_db:
    environment:
      - POSTGRES_DB=${CHATBOT_DB_NAME}
      - POSTGRES_USER=${CHATBOT_DB_USER}
      - POSTGRES_PASSWORD=${CHATBOT_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  user_db:
    environment:
      - POSTGRES_DB=${USER_DB_NAME}
      - POSTGRES_USER=${USER_DB_USER}
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    ports: []

  # --- RabbitMQ produzione ---
  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.6
      - RABBITMQ_DISK_FREE_LIMIT=1GB
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Rimuovo management UI per sicurezza
    ports: []

  # --- NGINX con configurazione produzione ---
  nginx:
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=pl-ai.it
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # --- Worker Services con scaling ---
  data_analysis_worker:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2

  image_classifier_worker:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2

  resource_manager_worker:
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  rag_worker:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.75'
      replicas: 2

# --- Configurazioni di rete produzione ---
networks:
  pl-ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 