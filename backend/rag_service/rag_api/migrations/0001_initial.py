# Generated by Django 4.2.7 on 2025-06-13 08:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RAGChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('chunk_index', models.IntegerField()),
                ('start_position', models.IntegerField(default=0)),
                ('end_position', models.IntegerField(default=0)),
                ('text_length', models.IntegerField()),
                ('embedding_created', models.BooleanField(default=False)),
                ('embedding_dimension', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['document', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='RAGDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('extracted_text', models.TextField(blank=True)),
                ('text_length', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('uploaded', 'Caricato'), ('processing', 'In elaborazione'), ('processed', 'Elaborato'), ('failed', 'Fallito')], default='uploaded', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('num_chunks', models.IntegerField(default=0)),
                ('embeddings_created', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RAGProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], max_length=10)),
                ('message', models.TextField()),
                ('step', models.CharField(blank=True, max_length=100)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='rag_api.ragdocument')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RAGKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('chunk_size', models.IntegerField(default=1000)),
                ('chunk_overlap', models.IntegerField(default=200)),
                ('embedding_model', models.CharField(default='all-MiniLM-L6-v2', max_length=100)),
                ('total_documents', models.IntegerField(default=0)),
                ('total_chunks', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('documents', models.ManyToManyField(blank=True, to='rag_api.ragdocument')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ragdocument',
            index=models.Index(fields=['user_id', 'status'], name='rag_api_rag_user_id_954d39_idx'),
        ),
        migrations.AddIndex(
            model_name='ragdocument',
            index=models.Index(fields=['status', 'created_at'], name='rag_api_rag_status_0d97cf_idx'),
        ),
        migrations.AddField(
            model_name='ragchunk',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='rag_api.ragdocument'),
        ),
        migrations.AddIndex(
            model_name='ragprocessinglog',
            index=models.Index(fields=['document', 'level'], name='rag_api_rag_documen_0b2abd_idx'),
        ),
        migrations.AddIndex(
            model_name='ragprocessinglog',
            index=models.Index(fields=['level', 'created_at'], name='rag_api_rag_level_b0583f_idx'),
        ),
        migrations.AddIndex(
            model_name='ragknowledgebase',
            index=models.Index(fields=['user_id', 'created_at'], name='rag_api_rag_user_id_66e1cd_idx'),
        ),
        migrations.AddIndex(
            model_name='ragchunk',
            index=models.Index(fields=['document', 'chunk_index'], name='rag_api_rag_documen_36a1f5_idx'),
        ),
        migrations.AddIndex(
            model_name='ragchunk',
            index=models.Index(fields=['document', 'embedding_created'], name='rag_api_rag_documen_66c90e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ragchunk',
            unique_together={('document', 'chunk_index')},
        ),
    ]
