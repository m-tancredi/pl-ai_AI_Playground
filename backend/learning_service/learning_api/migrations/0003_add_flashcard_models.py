# Generated by Django 4.2.7 on 2025-07-24 10:05

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('learning_api', '0002_add_depth_level_to_lesson'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField(help_text='ID utente dal servizio auth')),
                ('question', models.TextField(help_text='Domanda/fronte della flashcard')),
                ('answer', models.TextField(help_text='Risposta/retro della flashcard')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Molto Facile'), (2, 'Facile'), (3, 'Medio'), (4, 'Difficile'), (5, 'Molto Difficile')], default=3, help_text='Livello di difficoltà della flashcard')),
                ('created_from', models.CharField(choices=[('lesson', 'Lezione'), ('approfondimento', 'Approfondimento')], default='lesson', help_text='Fonte da cui è stata generata la flashcard', max_length=20)),
                ('source_content', models.TextField(blank=True, help_text='Contenuto originale da cui è stata estratta')),
                ('times_reviewed', models.IntegerField(default=0)),
                ('times_correct', models.IntegerField(default=0)),
                ('times_incorrect', models.IntegerField(default=0)),
                ('average_response_time', models.FloatField(default=0.0, help_text='Tempo medio di risposta in secondi')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='learning_api.lesson')),
            ],
            options={
                'verbose_name': 'Flashcard',
                'verbose_name_plural': 'Flashcards',
                'db_table': 'flashcards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FlashcardReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField(help_text='ID utente dal servizio auth')),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('ease_factor', models.FloatField(default=2.5, help_text='Fattore di facilità SuperMemo-2 (min 1.3)')),
                ('interval_days', models.IntegerField(default=1, help_text='Intervallo in giorni prima della prossima revisione')),
                ('next_review_date', models.DateField(help_text='Data della prossima revisione')),
                ('quality_rating', models.IntegerField(choices=[(0, 'Blackout Completo'), (1, 'Risposta Sbagliata'), (2, 'Risposta Difficile'), (3, 'Risposta con Esitazione'), (4, 'Risposta Facile'), (5, 'Risposta Perfetta')], help_text='Qualità della risposta (0-5 scala SuperMemo-2)')),
                ('response_time_seconds', models.FloatField(default=0.0, help_text='Tempo impiegato per rispondere')),
                ('notes', models.TextField(blank=True, help_text='Note opzionali sulla sessione di ripasso')),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='learning_api.flashcard')),
            ],
            options={
                'verbose_name': 'Revisione Flashcard',
                'verbose_name_plural': 'Revisioni Flashcards',
                'db_table': 'flashcard_reviews',
                'ordering': ['-review_date'],
                'indexes': [models.Index(fields=['flashcard', '-review_date'], name='flashcard_r_flashca_68cadd_idx'), models.Index(fields=['user_id', 'next_review_date'], name='flashcard_r_user_id_c312cc_idx'), models.Index(fields=['user_id', '-review_date'], name='flashcard_r_user_id_7237bb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='flashcard',
            index=models.Index(fields=['lesson', 'user_id'], name='flashcards_lesson__ae6108_idx'),
        ),
        migrations.AddIndex(
            model_name='flashcard',
            index=models.Index(fields=['user_id', '-created_at'], name='flashcards_user_id_3988a7_idx'),
        ),
        migrations.AddIndex(
            model_name='flashcard',
            index=models.Index(fields=['user_id', 'difficulty_level'], name='flashcards_user_id_ca9264_idx'),
        ),
    ]
