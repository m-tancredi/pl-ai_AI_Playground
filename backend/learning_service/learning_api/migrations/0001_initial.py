# Generated by Django 4.2.7 on 2025-06-23 14:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField()),
                ('action', models.CharField(max_length=100)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=100)),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'activity_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Approfondimento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(help_text="Titolo dell'approfondimento", max_length=200)),
                ('content', models.TextField(help_text="Contenuto dell'approfondimento")),
                ('detailed_content', models.TextField(blank=True, help_text='Contenuto dettagliato (HTML)')),
                ('is_detailed', models.BooleanField(default=False, help_text="Se l'approfondimento è stato espanso")),
                ('order', models.IntegerField(default=0, help_text='Ordine di visualizzazione')),
            ],
            options={
                'verbose_name': 'Approfondimento',
                'verbose_name_plural': 'Approfondimenti',
                'db_table': 'approfondimenti',
                'ordering': ['lesson', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField(help_text='ID utente dal servizio auth')),
                ('title', models.CharField(help_text='Titolo della lezione', max_length=500)),
                ('content', models.TextField(help_text='Contenuto della mini-lezione')),
                ('status', models.CharField(choices=[('in_progress', 'In Corso'), ('completed', 'Completata')], default='in_progress', max_length=20)),
                ('lesson_length', models.IntegerField(default=15, help_text='Lunghezza in righe')),
            ],
            options={
                'verbose_name': 'Lezione',
                'verbose_name_plural': 'Lezioni',
                'db_table': 'lessons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('questions', models.JSONField(default=list, help_text='Array di domande in formato JSON')),
                ('total_questions', models.IntegerField(default=0)),
                ('lesson', models.ForeignKey(help_text='Lezione associata', on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='learning_api.lesson')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quiz',
                'db_table': 'quizzes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField(unique=True)),
                ('total_lessons', models.IntegerField(default=0)),
                ('completed_lessons', models.IntegerField(default=0)),
                ('total_quiz_questions', models.IntegerField(default=0)),
                ('correct_quiz_answers', models.IntegerField(default=0)),
                ('total_approfondimenti', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Progresso Utente',
                'verbose_name_plural': 'Progressi Utenti',
                'db_table': 'user_progress',
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField(help_text='ID utente che ha risposto')),
                ('question_index', models.IntegerField(help_text='Indice della domanda')),
                ('answer_index', models.IntegerField(help_text='Indice della risposta scelta')),
                ('is_correct', models.BooleanField(help_text='Se la risposta è corretta')),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='learning_api.quiz')),
            ],
            options={
                'verbose_name': 'Risposta Quiz',
                'verbose_name_plural': 'Risposte Quiz',
                'db_table': 'quiz_answers',
                'ordering': ['-answered_at'],
            },
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['user_id', '-created_at'], name='lessons_user_id_ea090a_idx'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['user_id', 'status'], name='lessons_user_id_ef96da_idx'),
        ),
        migrations.AddField(
            model_name='approfondimento',
            name='lesson',
            field=models.ForeignKey(help_text='Lezione associata', on_delete=django.db.models.deletion.CASCADE, related_name='approfondimenti', to='learning_api.lesson'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['user_id', '-created_at'], name='activity_lo_user_id_f9dfaa_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['action', '-created_at'], name='activity_lo_action_61fa17_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quizanswer',
            unique_together={('quiz', 'user_id', 'question_index')},
        ),
        migrations.AddIndex(
            model_name='approfondimento',
            index=models.Index(fields=['lesson', 'order'], name='approfondim_lesson__0196fb_idx'),
        ),
    ]
