# pl-ai/nginx/nginx.conf

user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    gzip  on;
    # Imposta qui una dimensione massima del corpo richiesta ragionevole per gli upload
    client_max_body_size 100M; # Esempio: 100 Megabytes per upload immagini/csv

    # --- UPSTREAMS ---
    upstream auth_service_upstream {
        server auth_service:8000;
    }
    upstream regression_service_upstream {
        server pl_ai_regression_service:8001;
    }
    upstream frontend_upstream {
        server frontend:3000;
    }
    # --- NUOVO Upstream per Image Generator ---
    upstream image_generator_service_upstream {
        server pl_ai_image_generator_service:8002; # Nome servizio e porta interna
    }

    server {
        listen 80;
        # server_name localhost; # Uncomment if needed

        # --- Gestione MEDIA Files da Volumi Montati ---
        # Serviamo i file direttamente da Nginx usando i volumi montati nel docker-compose.yml
        # Nota: I percorsi alias corrispondono ai target dei mount nel container Nginx

        # Media per Regression Service (es. /media/datasets/...)
        location /media/datasets/ {
            # Percorso nel container Nginx dove è montato il volume regression_media_data
            alias /media_regression/datasets/;
            expires 30d; # Cache lunga per file dataset
            add_header Cache-Control "public";
            # access_log off; # Disabilita log specifici se non necessari
        }

        # Media Temporanei per Image Generator (es. /media/temp_generated/...)
        location /media/temp_generated/ {
            # Percorso nel container Nginx dove è montato il volume image_generator_media
            alias /media_images/temp_generated/; # <-- CONTROLLA QUESTO ALIAS!
            expires 1h; # Cache breve o nessuna cache per file temporanei
            add_header Cache-Control "private, no-store";
            # access_log off; # Puoi commentare per vedere se arriva la richiesta nei log principali
        }

        # Media Salvati per Image Generator (es. /media/saved_images/user_1/...)
        location /media/saved_images/ {
             # Percorso nel container Nginx dove è montato il volume image_generator_media
            alias /media_images/saved_images/;
            expires 30d; # Cache lunga per immagini salvate
            add_header Cache-Control "public";
            # access_log off;
        }

        # --- API LOCATIONS ---

        # API Auth Service (Esistente)
        location /api/v1/ { # O /api/auth/ se hai usato quello
            proxy_pass http://auth_service_upstream/api/v1/; # Assicurati che il path finale corrisponda
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # API Regression Service (Esistente)
        location /api/regression/ {
            proxy_pass http://regression_service_upstream/api/; # Il backend ascolta su /api/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            # client_max_body_size ereditato da http block o impostabile qui
        }

        # --- NUOVA Location API Image Generator ---
        location /api/images/ {
            proxy_pass http://image_generator_service_upstream/api/; # Il backend ascolta su /api/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            # Timeout più lunghi per generazione/upload immagini
            proxy_connect_timeout 120s; # Aumentato
            proxy_send_timeout 120s;    # Aumentato
            proxy_read_timeout 120s;     # Aumentato
            # client_max_body_size ereditato da http block
        }

        # --- Frontend Location (Catch-all) ---
        location / {
            proxy_pass http://frontend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
             # Supporto WebSocket se il frontend lo userà
             # proxy_http_version 1.1;
             # proxy_set_header Upgrade $http_upgrade;
             # proxy_set_header Connection "upgrade";
        }
    }
}