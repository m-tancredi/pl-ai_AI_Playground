user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    # Dimensione massima corpo richiesta globale (aumentata per upload)
    client_max_body_size 150M; # Esempio: 150 MB

    gzip  on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript application/xml application/xml+rss text/javascript image/jpeg image/png image/svg+xml application/pdf;

    # --- Upstreams ---
    upstream auth_service_upstream              { server auth_service:8000; }
    upstream regression_service_upstream        { server pl_ai_regression_service:8001; }
    upstream image_generator_service_upstream   { server pl_ai_image_generator_service:8002; }
    upstream resource_manager_service_upstream  { server resource_manager_service:8003; } # Web
    upstream frontend_upstream                  { server frontend:3000; }

    server {
        listen 80;
        server_name localhost; # O il tuo dominio

        # --- Media File Serving ---
        # Serviti direttamente da Nginx tramite i volumi montati

        # Regression Media (es. /media/datasets/...)
        location /media/datasets/ {
            alias /media_regression/datasets/;
            expires 30d; add_header Cache-Control "public"; access_log off;
        }

        # Image Generator Media (Temp)
        location /media/temp_generated/ {
            alias /media_images/temp_generated/;
            expires 1h; add_header Cache-Control "private, no-store"; access_log off;
        }
        # Image Generator Media (Saved)
        location /media/saved_images/ {
             alias /media_images/saved_images/;
             expires 30d; add_header Cache-Control "public"; access_log off;
        }

        # Resource Manager Media (es. /media/resources/user_X/...)
        location /media/resources/ {
            alias /media_resources/resources/; # Path nel container Nginx
            expires 30d; add_header Cache-Control "public"; access_log off;
            # Prova a servire il file, se non esiste potrebbe essere un errore
             try_files $uri =404;
        }

        # --- API Routing ---

        # Auth API (es. /api/v1/...)
        location /api/v1/ {
            proxy_pass http://auth_service_upstream/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Regression API (es. /api/regression/...)
        location /api/regression/ {
            proxy_pass http://regression_service_upstream/api/; # Il backend ascolta su /api/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Image Generator API (es. /api/images/...)
        location /api/images/ {
            proxy_pass http://image_generator_service_upstream/api/; # Il backend ascolta su /api/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            # Timeout lunghi per generazione immagini
            proxy_connect_timeout 180s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
        }

        # Resource Manager API (es. /api/resources/...)
        location /api/resources/ {
            proxy_pass http://resource_manager_service_upstream/api/resources/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            # Timeout standard o leggermente aumentati se l'upload Ã¨ lento
            # proxy_read_timeout 90s;
        }
         # Resource Manager API Interna (Opzionale - da proteggere meglio)
        # location /api/internal/ {
        #     # Aggiungere qui controlli di accesso (es. allow 172.x.x.x/16; deny all;)
        #     proxy_pass http://resource_manager_service_upstream/api/internal/;
        #     # ... proxy headers ...
        # }

        # --- Frontend (React App) ---
        location / {
            proxy_pass http://frontend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            # Supporto WebSocket se necessario
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # Gestione errori Nginx (opzionale)
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html { root /usr/share/nginx/html; }
    }
}